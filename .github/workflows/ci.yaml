name: CI pipeline
run-name: ${{ github.actor }} is executing CI. ðŸš€
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
        
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Run flake8
        run: flake8

      - name: Run tests and coverage
        run: |
          chmod +x tests.sh
          ./tests.sh
  
      - name: Run security checks
        run: |
          chmod +x security.sh
          ./security.sh

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

      - name: Generate SonarQube Token
        id: sonarqube_token
        run: echo "SONAR_TOKEN=$(curl -u ${{ secrets.SONARQUBE_USER }}:${{ secrets.SONARQUBE_PASSWORD }} -X POST 'http://sonarqube:9000/api/user_tokens/generate?name=github-actions-token' | jq -r .token)" >> $GITHUB_ENV

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          SONAR-TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://sonarqube:9000
          sonar-project-key: myproject
          sonar-language: python
          sonar-sources: ${{ github.workspace }}
